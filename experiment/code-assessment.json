{
    "version": 1,
    "experiment name": "Tree Traversal",
    "problems": [
        {
            "problem name": "Preorder Traversal of a Binary Tree",
            "description": "Implement a function to perform a preorder traversal on a binary tree.",
            "inputs": [
                {
                    "val": 1,
                    "left": {
                        "val": 2,
                        "left": {"val": 4, "left": null, "right": null},
                        "right": {"val": 5, "left": null, "right": null}
                    },
                    "right": {
                        "val": 3,
                        "left": {"val": 6, "left": null, "right": null},
                        "right": {"val": 7, "left": null, "right": null}
                    }
                }
            ],
            "expected": [1, 2, 4, 5, 3, 6, 7],
            "inputs description": "Input is a binary tree represented as a nested dictionary. Each node has a value 'val' and pointers to its left and right children.",
            "expected description": "An array representing the preorder traversal of the tree."
        },
        {
            "problem name": "Inorder Traversal of a Binary Tree",
            "description": "Implement a function to perform an inorder traversal on a binary tree.",
            "inputs": [
                {
                    "val": 1,
                    "left": {
                        "val": 2,
                        "left": {"val": 4, "left": null, "right": null},
                        "right": {"val": 5, "left": null, "right": null}
                    },
                    "right": {
                        "val": 3,
                        "left": {"val": 6, "left": null, "right": null},
                        "right": {"val": 7, "left": null, "right": null}
                    }
                }
            ],
            "expected": [4, 2, 5, 1, 6, 3, 7],
            "inputs description": "Input is a binary tree represented as a nested dictionary. Each node has a value 'val' and pointers to its left and right children.",
            "expected description": "An array representing the inorder traversal of the tree."
        },
        {
            "problem name": "Postorder Traversal of a Binary Tree",
            "description": "Implement a function to perform a postorder traversal on a binary tree.",
            "inputs": [
                {
                    "val": 1,
                    "left": {
                        "val": 2,
                        "left": {"val": 4, "left": null, "right": null},
                        "right": {"val": 5, "left": null, "right": null}
                    },
                    "right": {
                        "val": 3,
                        "left": {"val": 6, "left": null, "right": null},
                        "right": {"val": 7, "left": null, "right": null}
                    }
                }
            ],
            "expected": [4, 5, 2, 6, 7, 3, 1],
            "inputs description": "Input is a binary tree represented as a nested dictionary. Each node has a value 'val' and pointers to its left and right children.",
            "expected description": "An array representing the postorder traversal of the tree."
        }
    ]
}
